zookeeper服务器会在本地处理只读请求：exists、getData、getChildren。
那些会改变zookeeper状态的客户端请求：create、delete、setData，将会被转发给群首，群首执行相应的请求，并形成状态的更新，
我们成为事务。
setData包括了两个阶段：节点中新的数据字段值和该节点新的版本号。当处理该事务时，服务器将会用事务中的数据信息来替换/z节点
中原来的数据信息，并会用事务中的版本号更新该节点，而不是增加版本号的值。
同时一个事务还具有幂等性，也就是说，我们可以对同一个事务执行两次，我们得到的结果还是一样的，我们甚至还可以对多个事务执行
多次，前提是我们确保多个事务的执行顺序每次都是一样的。事务的幂等性可以让我们在进行恢复处理时更加简单。
当群首产生了一个事务，就会为该事务分配一个标识符，我们称之为zookeeper会话ID(zxid)，zxid为一个long型整数，分为两部分：
时间戳和计数器。

服务器与监视点：
监视点只会保存在内存，而不会持久化到硬盘，当客户端与服务器端的连接断开时，它的所有监视点会从内存中清除，因为客户端库也会
维护一份监视点的数据，在重连之后监视点数据会再次被同步到服务端。
ClientCnxn类管理连接到server的Socket连接，该类维护了一个可连接的zookeeper的服务器列表，并当连接断掉的时候无缝的切换
到其它服务器。当重连到一个其它的服务器时会使用同一个会话（如果没有过期的话），客户端也会重置所有的监视点到刚连接的服务器
上。